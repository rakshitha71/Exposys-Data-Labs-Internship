/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package email;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Admin
 */
public class homepageemail extends javax.swing.JFrame {

    /**
     * Creates new form homepageemail
     */
    String un;
    int check=0;//INBOX - SENT// 0-INBOX 1-SENT
    public void my_update(String str) {
	loggedin.setText(str);
        un=str;
        this.setTitle(str+" - Home");
        load_mail();
    }
    public homepageemail() {
        initComponents();
        this.setLocationRelativeTo(null);
//        load_mail();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void load_mail(){
        check=0;
        String status;
        try {
          DefaultTableModel m = (DefaultTableModel) this.jTable1.getModel();
          m.setRowCount(0);
          JTableHeader th = jTable1.getTableHeader();
          TableColumnModel tcm = th.getColumnModel();
          TableColumn tc = tcm.getColumn(0);
          tc.setHeaderValue("SENDER");
          th.repaint();
          un=encription.encrpfun(loggedin.getText());
          Statement s =(Statement) db.mycon().createStatement();
          ResultSet rs = s.executeQuery("Select * from email where receiver = '"+un+"' order by id desc;");
          while(rs.next()){
              status=decription.decrpfun(rs.getString("status"));
              m.addRow(new Object[] {
              decription.decrpfun(rs.getString("sender")),
              decription.decrpfun(rs.getString("content")),
              decription.decrpfun(rs.getString("date")),
              status
              });
          }
         s.close();
      } 
      catch (SQLException e) {
        System.out.println(e);  
      }
    }
    public void load_mail_sent(){
        check=1;
        String status="Sent";
        try {
          DefaultTableModel m = (DefaultTableModel) this.jTable1.getModel();
          m.setRowCount(0);
          JTableHeader th = jTable1.getTableHeader();
          TableColumnModel tcm = th.getColumnModel();
          TableColumn tc = tcm.getColumn(0);
          tc.setHeaderValue("RECEIVER");
          th.repaint();
          un=encription.encrpfun(loggedin.getText());
          Statement s =(Statement) db.mycon().createStatement();
          ResultSet rs = s.executeQuery("Select * from email where sender='"+un+"' order by id desc;");
          while(rs.next()){
              m.addRow(new Object[] {
                  decription.decrpfun(rs.getString("receiver")),
                  decription.decrpfun(rs.getString("content")),
                  decription.decrpfun(rs.getString("date")),
                  status
              });
          }
          
         s.close();
      } 
      catch (SQLException e) {
        System.out.println(e);  
      }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        reload = new javax.swing.JButton();
        inbox = new javax.swing.JButton();
        sent = new javax.swing.JButton();
        compose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        loggedin = new javax.swing.JTextField();
        logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        reload.setBackground(new java.awt.Color(0, 51, 255));
        reload.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        reload.setForeground(new java.awt.Color(255, 255, 255));
        reload.setText("RELOAD");
        reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadActionPerformed(evt);
            }
        });

        inbox.setBackground(new java.awt.Color(0, 51, 255));
        inbox.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        inbox.setForeground(new java.awt.Color(255, 255, 255));
        inbox.setText("INBOX");
        inbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inboxActionPerformed(evt);
            }
        });

        sent.setBackground(new java.awt.Color(0, 51, 255));
        sent.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        sent.setForeground(new java.awt.Color(255, 255, 255));
        sent.setText("SENT");
        sent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sentActionPerformed(evt);
            }
        });

        compose.setBackground(new java.awt.Color(0, 51, 255));
        compose.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        compose.setForeground(new java.awt.Color(255, 255, 255));
        compose.setText("COMPOSE");
        compose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                composeActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SENDER", "CONTENT", "DATE", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        loggedin.setEditable(false);
        loggedin.setText("abc123@gmail.com");
        loggedin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loggedinMouseClicked(evt);
            }
        });
        loggedin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loggedinActionPerformed(evt);
            }
        });

        logout.setBackground(new java.awt.Color(0, 51, 255));
        logout.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("USER:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loggedin, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(reload, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inbox, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sent, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(compose))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(loggedin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reload, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inbox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sent, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compose, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadActionPerformed
        // TODO add your handling code here:
        load_mail();
    }//GEN-LAST:event_reloadActionPerformed

    private void inboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inboxActionPerformed
        // TODO add your handling code here:
        load_mail();
    }//GEN-LAST:event_inboxActionPerformed

    private void sentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sentActionPerformed
        // TODO add your handling code here:
        load_mail_sent();
    }//GEN-LAST:event_sentActionPerformed

    private void composeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_composeActionPerformed
        // TODO add your handling code here:
        composeframe jf1 = new composeframe();
        jf1.my_update(loggedin.getText());
        jf1.setVisible(true);
        dispose();
    }//GEN-LAST:event_composeActionPerformed

    private void loggedinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loggedinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loggedinActionPerformed

    private void loggedinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loggedinMouseClicked
        // TODO add your handling code here:
        profile jf1 = new profile();
        jf1.my_update(loggedin.getText());
        jf1.setVisible(true);
        dispose();
    }//GEN-LAST:event_loggedinMouseClicked

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        Home2 jf1 = new Home2();
        jf1.setVisible(true);
        dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
           int index = jTable1.getSelectedRow();
            TableModel model = jTable1.getModel();
            if(check==0){
            expandmail jf = new expandmail();
            String un=loggedin.getText();
            String sender = model.getValueAt(index, 0).toString();
            String content = model.getValueAt(index, 1).toString();
            String date = model.getValueAt(index, 2).toString();
            String statusv="Read";
            statusv=encription.encrpfun(statusv);
            un=encription.encrpfun(un);
            sender=encription.encrpfun(sender);
            content=encription.encrpfun(content);
            date=encription.encrpfun(date);
            try {
          Statement s =(Statement) db.mycon().createStatement();
          ResultSet rs = s.executeQuery("Select * from email where sender='"+sender+"' and receiver = '"+un+"' and content='"+content+"' and date='"+date+"';");
          if(rs.next()){
              jf.maiload(
                      decription.decrpfun(un),
                      decription.decrpfun(sender),
                      decription.decrpfun(content), 
                      decription.decrpfun(date),
                      decription.decrpfun(rs.getString("subject"))
              );
              s.executeUpdate("Update email set status='"+statusv+"' where sender='"+sender+"' and receiver = '"+un+"' and content='"+content+"' and date='"+date+"';");
              jf.setVisible(true);
              dispose();
          }
         s.close();
      } 
      catch (SQLException e) {
        System.out.println(e);  
      }
            }
            else{
            expandmailsent jf = new expandmailsent();
            String un=loggedin.getText();
            String receiver = model.getValueAt(index, 0).toString();
            String content = model.getValueAt(index, 1).toString();
            String date = model.getValueAt(index, 2).toString();
            un=encription.encrpfun(un);
            receiver=encription.encrpfun(receiver);
            content=encription.encrpfun(content);
            date=encription.encrpfun(date);
            try {
          Statement s =(Statement) db.mycon().createStatement();
          ResultSet rs = s.executeQuery("Select * from email where sender='"+un+"' and receiver = '"+receiver+"' and content='"+content+"' and date='"+date+"';");
          if(rs.next()){
              jf.maiload(
                      decription.decrpfun(un),
                      decription.decrpfun(receiver),
                      decription.decrpfun(content), 
                      decription.decrpfun(date),
                      decription.decrpfun(rs.getString("subject"))
              );
              jf.setVisible(true);
              dispose();
          }
         s.close();
      } 
      catch (SQLException e) {
        System.out.println(e);  
      }
            }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homepageemail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homepageemail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homepageemail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homepageemail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homepageemail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton compose;
    private javax.swing.JButton inbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField loggedin;
    private javax.swing.JButton logout;
    private javax.swing.JButton reload;
    private javax.swing.JButton sent;
    // End of variables declaration//GEN-END:variables
}
